; settings.ini -- Neuritetracker settings file 
;From the Neuritetracker project. https://github.com/sgbasel/neuritetracker
;Copyright ?? 2015 Kevin Smith and Fethallah Benmansour. KTH Royal
;Institute of Technology in Stockholm, Sweden and University of Basel, 
;Switzerland. All rights reserved.
;-------------------------------------------------------------------------------


; define which types of output should be written to file
[output]

; Save a Matlab .mat file containing all processed data, possibly large file size (set to 1)
saveMat 		= 0

; Write movie frames and encode movies
writeFramesToFile       = 0  ; write individual movie frames to disk
movieNeuronChannel 	= 0
movieNucleusChannel 	= 0
movieNucleusDetection 	= 0
movieTubularity 	= 0
movieNeuriteProbability = 0
movieCellSegmentation 	= 0
movieBacktracing 	= 0
movieFinal 		= 0
movieFinalNumbered 	= 1
movieExtractedModel 	= 0

; Save measurements to save to CSV files
saveCSVmeasurements	= 1;   Toggle (1=save, 0=no save)
measurements = DistanceTraveled,Speed,NbBranchesPerNeuriteMean,ComplexityPerNeuriteMean,NumberOfNeurites,TotalNeuritesBranches,SomaMajorAxisLength,TotalNeuritesLength,SomaArea

; Where to save the results
destFolder 		= [];


;-------------------------------------------------------------------------------
; define default values for the various parameters used int neuritetracker
[defaultparameters]

bodySTD                  = 28.9134; 	% normalization (TODO: remove this)
nucSTD                   = 3.0508;  	% normalization (TODO: remove this)
MaxNucleusArea           = 300;  	% nucleus detection (Expose. this is well suited for 10x, to be adapted for other magnifications)
MinNucleusArea           = 70;   	% nucleus detection (Expose. this is well suited for 10x, to be adapted for other magnifications)
SmoothingNuc             = 2.0;  	% nucleus detection (Gaussian smoothing for the mCherry channel)
MSER_MaxVariation        = 0.2;  	% nucleus detection (see: http://www.vlfeat.org/api/mser-fundamentals.html)
MSER_Delta               = 2;    	% nucleus detection (see: http://www.vlfeat.org/api/mser-fundamentals.html)
GeodesicDistanceThresh   = 2e-6; 	% somata detection  (Expose. in RegionGrowingSomata.h lines 413 and 501, the propagating weight is computed as the average ((a+b)/2) of a background weight and nuclei weight : double weightBackground = 1.0 / (1e7* exp((Pc-meanGlobalInt)*(Pc-meanGlobalInt) / (2.0*stdGlobalInt*stdGlobalInt) ) +1); where, Pc is the image intensity of the current pixel, meanGlobalInt is the mean image green intensity. double weight = 1.0 / (1e7* exp(-(Pc-meanInt)*(Pc-meanInt) / (2.0*multFactor*multFactor*stdInt*stdInt) ) +1); where meanInt and stdInt are the green intensity stats of the current nuclei)
LengthThresh             = 7;    	% somata detection  (Expose. this is the maximal growing distance from the initial nuclei is (2*LegthThresh). Expose)
StdMultFactor            = 1.5;  	% somata detection  (Expose. multiplicative factor stdGlobalInt in RegionGrowingSomata.h 501: multFactor)
MinDistanceToBoundary    = 10;   	% cell detection filtering
MaxEccentricity          = 0.85; 	% cell detection filtering
MinCircularity           = 0.2;  	% cell detection filtering
TemporalWindowSize       = 4; 		% graph tracking
SpatialWindowSize        = 50; 		% graph tracking
MinTrackLength           = 20;		% graph tracking
NumberBestTracks         = 40; 		% graph tracking
WeightTime               = 50; 		% graph tracking
WeightShape              = 40; 		% graph tracking
WeightThreshold          = 200; 	% graph tracking
bodyMAX                  = 11234;	% neurite detection (see old code from German and Kevin)
FrangiScaleRange  	 = [1 2];	% neurite detection (Expose. sigma range values for the hession of gaussian )
FrangiScaleRatio 	 = 1; 	 	% neurite detection (Expose. sigma step. Basically, with these values we have sigma = 1 and 2 )
FrangiBetaOne   	 = .5;	 	% neurite detection (Frangi correction constant, default 0.5)
FrangiBetaTwo     	 = 15;	 	% neurite detection (Frangi correction constant, default 15 )
BlackWhite        	 = false;	% neurite detection (Expose. Frangi Detect black or white ridges. Light ridges set to false)
verbose           	 = false;	% neurite detection (Frangi verbose mode)
minimalSizeOfNeurite     = 10;   	% neurite detection (Expose. Max length of a neurite branch)
GeoDistNeuriteThresh     = 0.0001;	% neurite detection (Expose. geodesic distance threshold. the used potential is the result of sigmoid fitting of frangi. Basically, the darker the faster it propagates...this parameter should be adapted to the tubularity)
KeyPointDetectionParam   = 5;    	% neurite detection (Do not expose: This is the endpoint detection parameter. it is mainly used for smoothing the geodesic distance along the front before local maxima detection (these local maxima being the candidate endpoints) )
NeuriteProbabilityThresh = 0.2;  	% neurite detection (Expose. This is a second geodesic distance threshold applyed during the back propagation from the previously detected endpoints)
NeuritePruningLengthThsh = 10;   	% neurite detection (same as minimalSizeOfNeurite...I believe it's a duplicate)
NeuriteStabLenghtThresh  = 30;   	% neurite tracking
NeuriteWeightThresh      = 800;  	% neurite tracking
NeuriteMinTrackLength    = 10;   	% neutite tracking
MicronsPerPixel          = .0771;	% general
Magnification 	    	 = 10x;  	% general
BitDepth 		 = 16;   	% general
UniqueID 		 = [];   	% general
MetaData  		 = [];   	% general



